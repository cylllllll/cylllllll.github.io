<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberry on cy&#39;s Blog 🍉</title>
    <link>https://cylllllll.github.io/categories/raspberry/</link>
    <description>Recent content in raspberry on cy&#39;s Blog 🍉</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2021, all rights reserved.</copyright>
    <lastBuildDate>Wed, 20 Jul 2022 11:11:01 +0000</lastBuildDate><atom:link href="https://cylllllll.github.io/categories/raspberry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为树莓派升级AirPlay 2</title>
      <link>https://cylllllll.github.io/post/airplay2/</link>
      <pubDate>Wed, 20 Jul 2022 11:11:01 +0000</pubDate>
      
      <guid>https://cylllllll.github.io/post/airplay2/</guid>
      <description>这两天在Reddit上看到一个关于「AirPlay2 on Linux」的帖子，其中推荐了 Shairport Sync 项目，于是我打算给家里在用的树莓派的AirPlay升级一下。大家有能力的可以直接去看原文，里面文档写的很详细。
准备 一台Linux 或 FreeBSD的设备，其性能至少要大于等于树莓派 2 319 和 320端口没有被占用 一个音箱（最好是3.5mm接口） 开始安装 首选建议大家先将系统更新到最新状态，可以大大减少许多莫名其妙的问题。
sudo apt-get update #检查更新 sudo apt-get upgrade #执行更新 关闭Wi-Fi节能管理 如果你使用设备使用Wi-Fi连接的话，需要将节能管理关闭，可以避免安装后设备进入节能后搜索不到音箱。
iwconfig wlan0 power off 安装依赖 以下是Shairport Sync需要依赖
apt install --no-install-recommends build-essential git xxd xmltoman \ autoconf automake libtool libpopt-dev libconfig-dev libasound2-dev \ avahi-daemon libavahi-client-dev libssl-dev libsoxr-dev libplist-dev \ libsodium-dev libavutil-dev libavcodec-dev libavformat-dev uuid-dev libgcrypt-dev nqptp nqptp是 Shairport Sync 监控时间的重要依赖，需要手动编译安装。
git clone https://github.com/mikebrady/nqptp.git #下载项目 cd nqptp #进入项目目录 autoreconf -fi #编译 .</description>
    </item>
    
    <item>
      <title>树莓派搭建低配版文件存储/家庭影音库</title>
      <link>https://cylllllll.github.io/post/raspberry/</link>
      <pubDate>Mon, 27 Sep 2021 16:00:01 +0000</pubDate>
      
      <guid>https://cylllllll.github.io/post/raspberry/</guid>
      <description>家里有个 Raspberry Pi 4B 只装了 HomeBridge 来接入家电感觉有点浪费，正好又有简单的家庭影音库需求，所以就有了这篇文章。
Raspberry Pi 4B 这代搭配千兆网口和 USB3.0 ，终于换掉了一直令人诟病的 USB2.0 ，至此速度理论上可以跑满千兆带宽，基本上能满足我的日常需求。
需要设备材料： Raspberry Pi 4B 搭载 Raspberry Pi OS（其他的可以 TF卡（做系统盘） 千兆路由器 CAT6网线 一个硬盘
硬盘挂载 手动挂载硬盘 毕竟TF卡做系统盘也存不了多少数据，所以第一件事就是把准备好的磁盘挂载上，我用的是旧电脑拆下来西数机械硬盘，买了个硬盘盒让它发挥余热。 首先插上硬盘通过sudo fdisk -l查看以下硬盘状态： 这个就是我们插上的硬盘，此时我们可以挂载到指定目录下： sudo mount Devide名称 自定义的指定目录 举例： sudo mount /dev/sda1 /media/pi/O 记得先创建一下storage文件夹sudo mkdir /media/pi/O 再次查看硬盘状态df -h，此时/dev/sda1已经挂载上去了。 以上就是手动挂载的方式，但是迫于断电重启的问题，每次挂载有点麻烦，所以设置启动时自动挂载硬盘是个不错的办法
自动挂载硬盘 在系统开机时会主动读取/etc/fstab这个文件中的内容，根据文件里面的配置挂载磁盘。 所以我们只需在/etc/fstab加入我们硬盘信息即可。 首先编辑文件：sudo vi /etc/fstab 加入UUID 指定目录 硬盘文件系统格式 defaults 0 0
当你不知道硬盘文件系统格式时，可以通过sudo blkid查看硬盘的UUID和TYPE 举例： UUID=&amp;quot;34D58C3DFA562624&amp;quot; /media/pi/O ntfs defaults 0 0 smb文件共享 安装 首先安装一下samba服务：</description>
    </item>
    
    <item>
      <title>树莓派4做Time Machine</title>
      <link>https://cylllllll.github.io/post/timemachine/</link>
      <pubDate>Sat, 12 Sep 2020 18:46:12 +0000</pubDate>
      
      <guid>https://cylllllll.github.io/post/timemachine/</guid>
      <description>准备硬盘 格式化分区 首先插上硬盘通过sudo fdisk -l查看以下硬盘状态： 可以看出这里的是NTFS格式的硬盘，我这里要根据/dev/sda1把硬盘格式化为ext4格式：
sudo mkfs.ext4 /dev/sda1 手动挂载硬盘 格式化完成后，重新通过sudo fdisk -l查看以下硬盘状态，此时我们可以把硬盘挂载到指定目录下： sudo mount Devide名称 自定义的指定目录 举例： sudo mount /dev/sda1 /media/pi/TimeMachine 记得先创建一下storage文件夹sudo mkdir /media/pi/TimeMachine 再次查看硬盘状态df -h，此时/dev/sda1已经挂载上去了。 以上就是手动挂载的方式，但是迫于断电重启的问题，每次挂载有点麻烦，所以设置启动时自动挂载硬盘是个不错的办法
自动挂载硬盘 在系统开机时会主动读取/etc/fstab这个文件中的内容，根据文件里面的配置挂载磁盘。 所以我们只需在/etc/fstab加入我们硬盘信息即可。 首先编辑文件：sudo vi /etc/fstab 加入UUID 指定目录 硬盘文件系统格式 defaults 0 0
当你不知道硬盘文件系统格式时，可以通过sudo blkid查看硬盘的UUID和TYPE 举例： UUID=&amp;quot;34D58C3DFA562624&amp;quot; /media/pi/TimeMachine ntfs defaults 0 0 安装netatalk sudo apt-get update sudo apt-get install netatalk avahi-daemon 配置 通常配置文件在/etc/netatalk/路径下，编辑配置文件：
sudo vi /etc/netatalk/afp.conf 追加以下配置：
[Time Machine] path = /media/pi/TimeMachine time machine = yes 重启netatalk服务来生效修改的配置文件：</description>
    </item>
    
  </channel>
</rss>
